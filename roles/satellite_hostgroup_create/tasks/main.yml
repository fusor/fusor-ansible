- name: Get proxy for new hostgroup content-source, puppet-ca-proxy, puppet-proxy
  command: >
    hammer --output json -u "{{ username }}" -p "{{ password}}"
    proxy info
    --name "{{ proxy }}"
  register: proxy_output
  changed_when: False
  when: proxy is defined

- set_fact:
    proxy_id: "{{ (proxy_output.stdout|from_json)['Id'] }}"
  when: proxy is defined

- name: Get os for hostgroup
  command: >
    hammer --output json -u "{{ username }}" -p "{{ password}}"
    os info
    --title "{{ operating_system }}"
  register: os_output
  changed_when: False
  when: operating_system is defined

- set_fact:
    medium_id: "{{ (os_output.stdout|from_json)['Installation media'][0]['id']}}"
  when: operating_system is defined

- name: Get hostgroup ID of parent {{ parent_title }}
  command: >
    hammer --output json -u "{{ username }}" -p "{{ password}}"
    hostgroup info
    --title "{{ parent_title }}"
  register: parent_output
  changed_when: False
  when: parent_title is defined

- set_fact:
    parent_id: "{{ (parent_output.stdout|from_json)['Id']}}"
  when: parent_title is defined

- name: Check if hostgroup {{ title }} exists already
  command: >
    hammer --output json -u "{{ username }}" -p "{{ password}}"
    hostgroup info
    --title "{{ title }}"
  register: hg_output
  ignore_errors: True
  changed_when: False
  failed_when: hg_output|failed and not 'not found' in hg_output.stderr

- name: Create hostgroup {{ name }}
  command: >
    hammer --output json -u "{{ username }}" -p "{{ password }}"
    hostgroup create
    --organization "{{ organization }}"
    --name "{{ name }}"
    {% if domain is defined %}--domain "{{ domain }}"{% endif %}
    {% if subnet is defined %}--subnet "{{ subnet }}"{% endif %}
    {% if parent_id is defined %}--parent-id "{{ parent_id }}"{% endif %}
    {% if lifecycle_environment is defined %}--lifecycle-environment "{{ lifecycle_environment }}"{% endif %}
    {% if content_view is defined %}--content-view "{{ content_view }}"{% endif %}
    {% if proxy_id is defined %}--content-source-id "{{ proxy_id }}"{% endif %}
    {% if proxy_id is defined %}--puppet-ca-proxy-id "{{ proxy_id }}"{% endif %}
    {% if proxy_id is defined %}--puppet-proxy-id "{{ proxy_id }}"{% endif %}
    {% if architecture is defined %}--architecture "{{ architecture }}"{% endif %}
    {% if operating_system is defined %}--operatingsystem "{{ operating_system }}"{% endif %}
    {% if medium_id is defined %}--medium-id "{{ medium_id }}"{% endif %}
    {% if partition_table is defined %}--partition-table "{{ partition_table }}"{% endif %}
    {% if root_pass is defined %}--root-pass "{{ root_pass }}"{% endif %}
    {% if locations is defined %}--locations "{{ locations }}"{% endif %}
  when: hg_output|failed and 'not found' in hg_output.stderr

