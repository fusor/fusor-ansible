- name: Check for discovered hosts
  command: >
    hammer --output json -u "{{ user }}" -p "{{ password}}"
    discovery info
    --id "{{ item.id }}"
  register: dh_output
  ignore_errors: True
  changed_when: False
  with_items: "{{ discovered_hosts }}"

- set_fact:
    successful_results: "{{ dh_output.results|rejectattr('stderr')|list }}"

- set_fact:
    discovered_host_ids: "{{ successful_results|map(attribute='stdout')|list|map('from_json')|list|map(attribute='ID')|list }}"

- name: Provision discovered hosts
  command: >
    hammer --output json -u "{{ user }}" -p "{{ password }}"
    discovery provision
    --id "{{ item.id }}"
    --new-name "{{ item.new_name }}"
    --hostgroup-title "{{ item.hostgroup_title }}"
    --build "true"
    --enabled "true"
    --managed "true"
  register: provision_output
  when: "{{ item.id in discovered_host_ids }}"
  with_items: "{{ discovered_hosts }}"

- name: Check on status of all hosts until they fully provisioned
  command: >
    hammer --output json -u "{{ user }}" -p "{{ password}}"
    host info
    --id "{{ item.id }}"
  register: host_status
  changed_when: False
  until: >
    not host_status.stderr
    and host_status.stdout
    and (host_status.stdout|from_json)['Installed at']
    and (host_status.stdout|from_json)["Additional info"]["Model"]["errata_status"] == 0
  retries: "{{ discovery_provision_poll_retries }}"
  delay: "{{ discovery_provision_poll_delay }}"
  when: "{{ item.id in discovered_host_ids }}"
  with_items: "{{ discovered_hosts }}"
